{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "from splinter import Browser\n",
    "from bs4 import BeautifulSoup\n",
    "import pandas as pd\n",
    "import time\n",
    "\n",
    "def init_browser():\n",
    "    executable_path = {'executable_path': 'chromedriver.exe'}\n",
    "    return Browser(\"chrome\", **executable_path, headless=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def scrape():\n",
    "    browser = init_browser()\n",
    "    # create mars_data dict that we can insert into mongo\n",
    "    mars_dic = {}\n",
    "    \n",
    "    url = 'https://mars.nasa.gov/news/'\n",
    "    browser.visit(url)\n",
    "    \n",
    "    html = browser.html\n",
    "    soup = bs(html, 'html.parser')\n",
    "\n",
    "    article = soup.find(\"div\", class_=\"list_text\")\n",
    "    news_title = article.find(\"div\", class_=\"content_title\").text\n",
    "    news_p = article.find(\"div\", class_=\"article_teaser_body\").text\n",
    "    \n",
    "    # add the text to mars_dic\n",
    "    mars_dic[\"news_title\"] = news_title\n",
    "    mars_dic[\"news_p\"] = news_p\n",
    "    \n",
    "    \n",
    "    # Visit the JPL Mars Space Images URL\n",
    "    url2 = \"https://www.jpl.nasa.gov/spaceimages/?search=&category=Mars\"\n",
    "    browser.visit(url2)\n",
    "\n",
    "    html_2 = browser.html\n",
    "    soup_2 = bs(html_2, 'html.parser')\n",
    "\n",
    "    image_url_find = soup_2.find(\"article\", class_=\"carousel_item\")[\"style\"]\n",
    "    image_url_parts = image_url_find.split(\"'\")[1]\n",
    "    \n",
    "    featured_image_url = \"https://www.jpl.nasa.gov\" + image_url_parts\n",
    "    mars_dic[\"features\"] = featured_image_url\n",
    "    \n",
    "      #  twitter URL\n",
    "    # setup the chromedriver path\n",
    "    # Visit the Mars weather twitter URL\n",
    "    url3 = \"https://twitter.com/marswxreport?lang=en\"\n",
    "    browser.visit(url3)\n",
    "\n",
    "    # Scrape the browser into soup and use soup to find the latest Mars weather\n",
    "    html_3 = browser.html\n",
    "    soup_3 = bs(html_3, 'html.parser')\n",
    "\n",
    "    mars_weather = soup_3.find('div', class_='js-tweet-text-container').find('p').text\n",
    "    mars_dic[\"Weather\"] = mars_weather\n",
    "    \n",
    "    #Visit the Mars Facts webpage here and use Pandas to scrape the table containing facts about the planet including Diameter, Mass, etc. \n",
    "    #Use Pandas to convert the data to a HTML table string.\n",
    "    url4 = 'https://space-facts.com/mars/'\n",
    "\n",
    "    mars_tables = pd.read_html(url4)\n",
    "    df = mars_tables[0]\n",
    "    df.columns = ['Parameter', 'Value']\n",
    "    df.set_index('Parameter', inplace=True)\n",
    "\n",
    "\n",
    "    # Convert the data to a HTML table string.\n",
    "    html_table = df.to_html().replace('\\n', '')\n",
    "\n",
    "    mars_dic[\"HTML\"]=html_table\n",
    "    \n",
    "    \n",
    "    #Hemisphere\n",
    "    #Prepare empty list to store dictionary of URL and titles\n",
    "    hemisphere_image_urls = []\n",
    "\n",
    "    #Loop \n",
    "    for i in range(4):\n",
    "\n",
    "        browser.find_by_css(\"a.product-item h3\")[i].click()\n",
    "        html = browser.html\n",
    "        soup = bs(html, 'lxml')\n",
    "\n",
    "        #Store in a variable\n",
    "        image = soup.find_all('img', class_='wide-image')[0]['src']\n",
    "        url = 'https://astrogeology.usgs.gov' + image\n",
    "\n",
    "        #Store the title into a varialbe and removed enhanced\n",
    "        title = soup.find('h2', class_='title').text.replace(' Enhanced', '')\n",
    "\n",
    "        #Append URL and title to a dictionary and append to list\n",
    "        hemisphere_image_urls.append({'title': title,\n",
    "                                 'img_url': url})\n",
    "\n",
    "        #Back to previous page to loop through other hemispheres.\n",
    "        browser.click_link_by_text('Back')\n",
    "        \n",
    "        mars_dic[\"hemisphere\"] = hemisphere_image_urls\n",
    "   "
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
